version: 2.1

orbs:
  node: circleci/node@1.0.1

executors:
  default_executor:
    docker:
      - image: circleci/node:10-browsers
    working_directory: ~/project

commands:
  run_firebase_deploy:
    description: 'Deploy app to Firebase'
    parameters:
      project_alias:
        type: string
        default: 'default'
    steps:
      - checkout
      - run_npm_install_with_cache
      - run:
          name: Install Firebase NPM Dependencies
          command: npm --prefix functions install
      - run:
          name: Build Artifacts
          command: |
            npm run build:ssr
            cp -a dist functions
            mv dist/browser/index.html dist/browser/index-browser.html
      - deploy:
          name: Deploy to Firebase
          command: |
            npm run firebase -- use << parameters.project_alias >> --token="$FIREBASE_TOKEN"
            npm run firebase -- deploy --token="$FIREBASE_TOKEN" --non-interactive

  run_npm_install_with_cache:
    description: 'Run NPM install with cache'
    steps:
      - node/with-cache:
          cache-key: 'package-lock.json'
          dir: node_modules
          steps:
            - run:
                name: Run NPM install
                command: npm ci

jobs:
  code_coverage:
    executor: default_executor
    steps:
      - checkout
      - run_npm_install_with_cache
      - run:
          name: Download Code Climate Test Reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: Notify Code Climate Test Reporter - Before Build
          command: ./cc-test-reporter before-build
      - run:
          name: Run code coverage
          command: npm test -- --code-coverage --no-watch --no-progress --browsers=ChromeHeadlessCI
      - run:
          name: Notify Code Climate Test Reporter - After Build
          command: ./cc-test-reporter after-build --exit-code $?

  deploy_dev:
    executor: default_executor
    steps:
      - run_firebase_deploy:
          project_alias: 'default'

  deploy_prod:
    executor: default_executor
    steps:
      - run_firebase_deploy:
          project_alias: 'prod'

  deploy_uat:
    executor: default_executor
    steps:
      - run_firebase_deploy:
          project_alias: 'uat'

  lint:
    executor: default_executor
    steps:
      - checkout
      - run_npm_install_with_cache
      - run:
          name: Run linter
          command: npm run lint

  release:
    executor: default_executor
    steps:
      - checkout
      - run_npm_install_with_cache
      - run:
          name: Run semantic release
          command: npm run semantic-release

  unit_test:
    executor: default_executor
    steps:
      - checkout
      - run_npm_install_with_cache
      - run:
          name: Run unit test
          command: npm test -- --karma-config=src/karma-ci.conf.js --no-watch --no-progress --browsers=ChromeHeadlessCI
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: test_results/karma

workflows:
  default_workflow:
    jobs:
      - lint
      - unit_test
      - code_coverage:
          requires:
            - lint
            - unit_test
          filters:
            branches:
              only: master
      - release:
          requires:
            - lint
            - unit_test
          filters:
            branches:
              only: master
      - deploy_dev:
          requires:
            - release
      - deploy_prod:
          requires:
            - lint
            - unit_test
          filters:
            branches:
              only: release
      - deploy_uat:
          requires:
            - lint
            - unit_test
          filters:
            branches:
              only: uat
